#include <LiquidCrystal.h>
#include <Wire.h>

LiquidCrystal lcd1(7, 6, 5, 4, 3, 2);
LiquidCrystal lcd2(13, 12, 11, 10, 9, 8);

const byte CONTOL_ARDUINO_ADDRESS = 0x09;

const int LANE_COUNT = 2;
const int DISPLAY_WIDTH = 16;

bool obstacles[LANE_COUNT][DISPLAY_WIDTH] = {
  {1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0}
};

bool isGameOver = false;
int playerLane = 0;
bool positionChanged = true;

byte characterTop[] = {
  B00000,
  B00000,
  B01110,
  B01110,
  B01110,
  B00100,
  B01110,
  B10101
};

byte characterBottom[] = {
  B10101,
  B10101,
  B00100,
  B01010,
  B01010,
  B11011,
  B00000,
  B00000
};

byte arrowTop[] = {
  B00000,
  B00000,
  B00000,
  B00001,
  B00011,
  B00111,
  B01111,
  B11111
};

byte arrowBottom[] = {
  B11111,
  B01111,
  B00111,
  B00011,
  B00001,
  B00000,
  B00000,
  B00000
};

void receiveEvent(int bytes){
  if (bytes < 50){
    while(Wire.available()){
      Wire.read();
    }
    return;
  }

  playerLane = Wire.read() - 9;
  isGameOver = (Wire.read() == 11);

  for(int i = 0; i < 2; i++){
    for(int j = 0; j < 16; j++){
      obstacles[i][j] = (Wire.read() == 11);
    }
  }

  positionChanged = true;

  

}

void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);
  
  Wire.begin(CONTOL_ARDUINO_ADDRESS);
  Wire.onReceive(receiveEvent);

  lcd1.begin(16, 2);
  lcd2.begin(16, 2);



}

void loop() {
  // put your main code here, to run repeatedly:
  // Serial.println("Hello");

  if(isGameOver == false){

    if(positionChanged){

      Serial.println(playerLane);

      lcd1.clear();
      lcd2.clear();

      lcd1.createChar(0, arrowTop);
      lcd1.createChar(1, arrowBottom);

      for(int i = 0; i < DISPLAY_WIDTH; i++){

        if(obstacles[0][i] == 1){

          lcd1.setCursor(i, 0);
          lcd1.write((byte)0);

          lcd1.setCursor(i, 1);
          lcd1.write((byte)1);

        }

      }

      lcd2.createChar(0, arrowTop);
      lcd2.createChar(1, arrowBottom);

      for(int i = 0; i < DISPLAY_WIDTH; i++){

        if(obstacles[1][i] == 1){

          lcd2.setCursor(i, 0);
          lcd2.write((byte)0);

          lcd2.setCursor(i, 1);
          lcd2.write((byte)1);

        }

      }

      switch(playerLane){
        case 0:
          lcd1.createChar(2, characterTop);
          lcd1.createChar(3, characterBottom);

          lcd1.setCursor(0, 0);
          lcd1.write((byte)2);

          lcd1.setCursor(0, 1);
          lcd1.write((byte)3);
          break;

        case 1:
          lcd2.createChar(2, characterTop);
          lcd2.createChar(3, characterBottom);

          lcd2.setCursor(0, 0);
          // lcd2.print("Heeeyyooo");
          lcd2.write((byte)2);

          lcd2.setCursor(0, 1);
          lcd2.write((byte)3);
          break;

      }

      positionChanged = false;

    }
    
  }
  else{
    
    int column = 6;

    lcd2.setCursor(column, 0);
    lcd2.print("GAME");

    lcd2.setCursor(column, 1);
    lcd2.print("OVER");

  }

}
